<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="14" passed="9" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-07-11T18:14:39 IST" name="Loan Department" finished-at="2021-07-11T18:14:40 IST" duration-ms="343">
    <groups>
      <group name="Smoke">
        <method signature="Start.demo()[pri:0, instance:TestNG.Start@5c909414]" name="demo" class="TestNG.Start"/>
        <method signature="Start2.starter()[pri:0, instance:TestNG.Start2@1b1473ab]" name="starter" class="TestNG.Start2"/>
        <method signature="Start4.LoginAPIHomeLoan()[pri:0, instance:TestNG.Start4@2f7c2f4f]" name="LoginAPIHomeLoan" class="TestNG.Start4"/>
        <method signature="Start3.webLoginCarLoan()[pri:0, instance:TestNG.Start3@3d74bf60]" name="webLoginCarLoan" class="TestNG.Start3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2021-07-11T18:14:39 IST" name="Personal Loan" finished-at="2021-07-11T18:14:39 IST" duration-ms="145">
      <class name="TestNG.Start4">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="beforeClass" finished-at="2021-07-11T18:14:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="beforeMethod" finished-at="2021-07-11T18:14:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="LoginAPIHomeLoan()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="LoginAPIHomeLoan" finished-at="2021-07-11T18:14:39 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LoginAPIHomeLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="afterMethod" finished-at="2021-07-11T18:14:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="beforeMethod" finished-at="2021-07-11T18:14:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="mobileLoginHomeLoan()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="mobileLoginHomeLoan" finished-at="2021-07-11T18:14:39 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mobileLoginHomeLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="afterMethod" finished-at="2021-07-11T18:14:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="beforeMethod" finished-at="2021-07-11T18:14:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="webLoginHomeLoan(java.lang.String,java.lang.String)[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="webLoginHomeLoan" finished-at="2021-07-11T18:14:39 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[https://www.google.co.in/]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2134578]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginHomeLoan -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="afterMethod" finished-at="2021-07-11T18:14:39 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:TestNG.Start4@2f7c2f4f]" started-at="2021-07-11T18:14:39 IST" name="afterClass" finished-at="2021-07-11T18:14:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
      </class> <!-- TestNG.Start4 -->
      <class name="TestNG.Start2">
        <test-method is-config="true" signature="prerequisite()[pri:0, instance:TestNG.Start2@1b1473ab]" started-at="2021-07-11T18:14:39 IST" name="prerequisite" finished-at="2021-07-11T18:14:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequisite -->
        <test-method signature="starter()[pri:0, instance:TestNG.Start2@1b1473ab]" started-at="2021-07-11T18:14:39 IST" name="starter" finished-at="2021-07-11T18:14:39 IST" duration-ms="9" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestNG.Start2.starter(Start2.java:19)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- starter -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:TestNG.Start2@1b1473ab]" started-at="2021-07-11T18:14:39 IST" name="beforeClass" finished-at="2021-07-11T18:14:39 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
      </class> <!-- TestNG.Start2 -->
      <class name="TestNG.Start">
        <test-method signature="base()[pri:0, instance:TestNG.Start@5c909414]" started-at="2021-07-11T18:14:39 IST" name="base" finished-at="2021-07-11T18:14:39 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- base -->
        <test-method signature="demo()[pri:0, instance:TestNG.Start@5c909414]" started-at="2021-07-11T18:14:39 IST" name="demo" finished-at="2021-07-11T18:14:39 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="endTest()[pri:0, instance:TestNG.Start@5c909414]" started-at="2021-07-11T18:14:39 IST" name="endTest" finished-at="2021-07-11T18:14:39 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endTest -->
      </class> <!-- TestNG.Start -->
    </test> <!-- Personal Loan -->
    <test started-at="2021-07-11T18:14:40 IST" name="Car Loan" finished-at="2021-07-11T18:14:40 IST" duration-ms="46">
      <class name="TestNG.Start3">
        <test-method signature="webLoginCarLoan()[pri:0, instance:TestNG.Start3@3d74bf60]" started-at="2021-07-11T18:14:40 IST" name="webLoginCarLoan" finished-at="2021-07-11T18:14:40 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLoginCarLoan -->
        <test-method signature="signInCarLoan(java.lang.String,java.lang.String)[pri:0, instance:TestNG.Start3@3d74bf60]" started-at="2021-07-11T18:14:40 IST" name="signInCarLoan" data-provider="getData" finished-at="2021-07-11T18:14:40 IST" duration-ms="3" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signInCarLoan -->
        <test-method signature="signInCarLoan(java.lang.String,java.lang.String)[pri:0, instance:TestNG.Start3@3d74bf60]" started-at="2021-07-11T18:14:40 IST" name="signInCarLoan" data-provider="getData" finished-at="2021-07-11T18:14:40 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signInCarLoan -->
        <test-method signature="signInCarLoan(java.lang.String,java.lang.String)[pri:0, instance:TestNG.Start3@3d74bf60]" started-at="2021-07-11T18:14:40 IST" name="signInCarLoan" data-provider="getData" finished-at="2021-07-11T18:14:40 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[3rdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[3rdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- signInCarLoan -->
        <test-method signature="APICarLoan()[pri:0, instance:TestNG.Start3@3d74bf60]" started-at="2021-07-11T18:14:40 IST" name="APICarLoan" finished-at="2021-07-11T18:14:40 IST" depends-on-methods="TestNG.Start3.webLoginCarLoan" duration-ms="2" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at TestNG.Start3.APICarLoan(Start3.java:64)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1507)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- APICarLoan -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:TestNG.Start3@3d74bf60]" started-at="2021-07-11T18:14:40 IST" name="afterSuite" finished-at="2021-07-11T18:14:40 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- TestNG.Start3 -->
      <class name="TestNG.Start2">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:TestNG.Start2@1b1473ab]" started-at="2021-07-11T18:14:39 IST" name="beforeSuite" finished-at="2021-07-11T18:14:39 IST" duration-ms="11" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
      </class> <!-- TestNG.Start2 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
