package javaStream;

import java.util.List;
import java.util.stream.Collector;
import java.util.stream.Collectors;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.testng.Assert;

public class WebTable {

	public static void main(String[] args) {
		
		System.setProperty("webdriver.chrome.driver", "C:\\Selenium\\chromedriver.exe");
		WebDriver driver = new ChromeDriver();
		driver.get("https://rahulshettyacademy.com/seleniumPractise/#/offers");
		
		//1.click on column
		driver.findElement(By.cssSelector("tr th:nth-child(1)")).click();
		
		//2.capture all web elements into a list
		List<WebElement> aList = driver.findElements(By.cssSelector("table[class='table table-bordered'] tbody tr td:nth-child(1)"));

		
		//3.capture text of all web elements into a  new list(original list)
		List<String> origList = aList.stream().map(s->s.getText()).collect(Collectors.toList());
		System.out.println(origList.get(1));
		
		//4.perform sort on original list -> sorted list
		List<String> sortedList = origList.stream().sorted().collect(Collectors.toList());
		System.out.println(sortedList.get(0));
		
		//4.compare oringinal list vs sorted list
		//(correct scenario) original list alsredy should be in sorted manner
		
		Assert.assertTrue(origList.equals(sortedList));
		
		
		//Scan the column with getText -> Beans -> get the price
		List<String> price = aList.stream().filter(s->s.getText().contains("Beans")).map(s->getPrice(s)).collect(Collectors.toList());
		System.out.println(price.get(0)); //s->getPrice(s) calling the fucking method
		
		//extra practice
		List<String> priceList = aList.stream().map(s->getPrice(s)).collect(Collectors.toList());
		//discount price
		List<String> discountPriceList = aList.stream().map(s->getDiscountPrice(s)).collect(Collectors.toList());
		//printing items and their price
		System.out.println("Items\tPrice");
		for(int i=0;i<origList.size();i++)
			System.out.println(origList.get(i) + "\t" + priceList.get(i));
	
	}
	
	private static String getPrice(WebElement s) {
	return	s.findElement(By.xpath("following-sibling::td[1]")).getText(); //concept of nested driver		
		
	}
	
	private static String getDiscountPrice(WebElement s) {
		return	s.findElement(By.xpath("following-sibling::td[2]")).getText(); //concept of nested driver		
			
		}

}
